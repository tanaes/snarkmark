rule assemble_megahit:
    """
    Run Megahit assembly on fastq
    """
    input:
        forward = qc_dir + "{sample}/atropos_trimmed/{sample}.trimmed.R1.fastq.gz",
        reverse = qc_dir + "{sample}/atropos_trimmed/{sample}.trimmed.R2.fastq.gz"
    output:
        touch(assemble_dir + "{sample}/megahit.done")
    params:
        mem_b = 120000000000,
        out_dir = assemble_dir + "{sample}/megahit",
        temp_dir = lambda wildcards: os.path.join(config['tmp_dir_root'],
                                                 'tmp_%s' % wildcards.sample,
                                                 'assemble_megahit')
    threads:
        12
    log:
        assemble_dir + "logs/assemble_megahit.sample_{sample}.log"
    benchmark:
        "benchmarks/assemble/assemble_megahit.sample_{sample}.txt"
    conda:
        "../envs/env_assemble.yaml"
    shell:
        """
        mkdir -p {params.temp_dir}

        megahit -1 {input.forward} -2 {input.reverse} \
        -m {params.mem_b} -t {threads} -o {params.temp_dir}/megahit \
        --out-prefix {wildcards.sample} \
        2> {log} 1>&2

        rm -r {params.temp_dir}
        """

rule assemble_metaspades:
    input:
        forward = qc_dir + "{sample}/atropos_trimmed/{sample}.trimmed.R1.fastq.gz",
        reverse = qc_dir + "{sample}/atropos_trimmed/{sample}.trimmed.R2.fastq.gz"
    output:
        touch(assemble_dir + "{sample}/metaspades.done")
    log:
        assemble_dir + "logs/assemble_metaspades.sample_{sample}.log"
    benchmark:
        "benchmarks/assemble/assemble_metaspades.sample_{sample}.txt"
    conda:
        "../envs/env_assemble.yaml"
    params:
        mem=240,
        out_dir = assemble_dir + "{sample}/metaspades",
        temp_dir = lambda wildcards: os.path.join(config['tmp_dir_root'],
                                                 'tmp_%s' % wildcards.sample,
                                                 'assemble_metaspades')
    threads:
        12
    shell:
        """
        mkdir -p {params.temp_dir}

        spades.py --meta -t {threads} -m {params.mem} \
        -1 {input.forward} -2 {input.reverse} -o {params.temp_dir} \
        2> {log} 1>&2

        rm -r {params.temp_dir}
        """

rule assemble:
    input:
        expand(rules.assemble_megahit.output, sample=samples),
        expand(rules.assemble_metaspades.output, sample=samples)
